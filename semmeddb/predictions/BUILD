cat ../extractions/gene_consensus_directionality.txt | sort -k2,2 | join -t$'\t' -1 2 -2 1 - <(cat ../extractions/gene_consensus_directionality.txt | sort -k1,1) | cut -f2- | awk 'BEGIN {FS = "\t"} {print $1 "_" $3 "\t" $2 * $4 / (sqrt($2 ^ 2) + sqrt($4 ^ 2))}' | sort -k1,1 | awk 'BEGIN {rel = ""; pos = 0; neg = 0} {if($1 != rel && rel != ""){print rel "\t" pos "\t" neg; pos = 0; neg = 0} rel = $1; if($2 > 0){pos += $2} if($2 < 0){neg -= $2}} END {print rel "\t" pos "\t" neg}' | sed 's/_/\t/g' | awk '{print $1 "\t" $2 "\t" ($3 - $4) * sqrt(($3 - $4) ^ 2) / ($3 + $4)}' | awk '$3 != 0' | awk '$1 != $2' > gene_hypotheses.txt
cat ../extractions/drug_consensus_directionality.txt | sort -k2,2 | join -t$'\t' -1 2 -2 1 - <(cat ../extractions/gene_consensus_directionality.txt | sort -k1,1) | cut -f2- | awk 'BEGIN {FS = "\t"} {print $1 "_" $3 "\t" $2 * $4 / (sqrt($2 ^ 2) + sqrt($4 ^ 2))}' | sort -k1,1 | awk 'BEGIN {rel = ""; pos = 0; neg = 0} {if($1 != rel && rel != ""){print rel "\t" pos "\t" neg; pos = 0; neg = 0} rel = $1; if($2 > 0){pos += $2} if($2 < 0){neg -= $2}} END {print rel "\t" pos "\t" neg}' | sed 's/_/\t/g' | awk '{print $1 "\t" $2 "\t" ($3 - $4) * sqrt(($3 - $4) ^ 2) / ($3 + $4)}' | awk '$3 != 0' | awk '$1 != $2' > drug_hypotheses.txt
cat ../extractions/no_dgidb/drug_consensus_directionality.txt | sort -k2,2 | join -t$'\t' -1 2 -2 1 - <(cat ../extractions/gene_consensus_directionality.txt | sort -k1,1) | cut -f2- | awk 'BEGIN {FS = "\t"} {print $1 "_" $3 "\t" $2 * $4 / (sqrt($2 ^ 2) + sqrt($4 ^ 2))}' | sort -k1,1 | awk 'BEGIN {rel = ""; pos = 0; neg = 0} {if($1 != rel && rel != ""){print rel "\t" pos "\t" neg; pos = 0; neg = 0} rel = $1; if($2 > 0){pos += $2} if($2 < 0){neg -= $2}} END {print rel "\t" pos "\t" neg}' | sed 's/_/\t/g' | awk '{print $1 "\t" $2 "\t" ($3 - $4) * sqrt(($3 - $4) ^ 2) / ($3 + $4)}' | awk '$3 != 0' | awk '$1 != $2' > no_dgidb_drug_hypotheses.txt


cat gene_hypotheses.txt | awk 'BEGIN {FS = "\t"} {print $1 "_" $2 "\t" $3}' | sort -k1,1 | join -t$'\t' - <(cat ../../parmesan_import/reactome_entrez.txt | awk 'BEGIN {FS = "\t"} {print $1 "_" $2 "\t" $3}' | sort -k1,1) > raw_reactome_comparison.txt
cat no_dgidb_drug_hypotheses.txt | awk 'BEGIN {FS = "\t"} {print $1 "_" $2 "\t" $3}' | sort -t$'\t' -k1,1 | join -t$'\t' - <(cat ../../parmesan_import/mod_to_entrez.txt | awk '{print $1 "_" $2 "\t" $3}' | sort -t$'\t' -k1,1) > raw_dgidb_comparison.txt

cat no_dgidb_drug_hypotheses.txt | cut -f3 | awk '{print int(sqrt($1 ^ 2))}' | sort | uniq -c | awk '{print $2 "\t" $1}' | sort -k1,1gr | awk 'BEGIN {n = ""; t = 0} {if(n != "" && n != $1) {print n "\t" t} n = $1; t += $2} END {print n "\t" t}' > drug_score_to_count.txt
for i in 0 $(seq 100); do cat raw_dgidb_comparison.txt | awk 'sqrt($2 ** 2) > '$i | awk '{print $2 * $3}' | awk 'BEGIN {p = 0; n = 0} {if($1 > 0){p += 1} else{n += 1}} END {print "'$i'\t" p "\t" n "\t" p / (p + n)}'; done > dgidb_raw_scoretable.txt
for i in $(cat dgidb_raw_scoretable.txt | cut -f1); do cat dgidb_raw_scoretable.txt | awk '$1 <= '$i | cut -f4 | sort -gr | head -1 | awk '{print "'$i'\t" $0}'; done | sort -k1,1 | join -t$'\t' - <(cat drug_score_to_count.txt | sort -k1,1) | cut -f2- | sort -k2,2gr | sort -k1,1gr -u > drug_accuracy_distribution.txt
for i in $(seq 100); do cat no_dgidb_drug_hypotheses.txt | awk 'BEGIN {FS = "\t"} $3 > '$i | cut -f2 | sort -u | wc -l | awk '{print "'$i'\t" $0}'; done > drug_minscore_to_no_genes.txt

cat gene_hypotheses.txt | cut -f3 | awk '{print int(sqrt($1 ^ 2))}' | sort | uniq -c | awk '{print $2 "\t" $1}' | sort -k1,1gr | awk 'BEGIN {n = ""; t = 0} {if(n != "" && n != $1) {print n "\t" t} n = $1; t += $2} END {print n "\t" t}' > gene_score_to_count.txt
for i in 0 $(seq 100); do cat raw_reactome_comparison.txt | awk 'sqrt($2 ** 2) > '$i | awk '{print $2 * $3}' | awk 'BEGIN {p = 0; n = 0} {if($1 > 0){p += 1} else{n += 1}} END {print "'$i'\t" p "\t" n "\t" p / (p + n)}'; done > reactome_raw_scoretable.txt
for i in $(cat reactome_raw_scoretable.txt | cut -f1); do cat reactome_raw_scoretable.txt | awk '$1 <= '$i | cut -f4 | sort -gr | head -1 | awk '{print "'$i'\t" $0}'; done | sort -k1,1 | join -t$'\t' - <(cat gene_score_to_count.txt | sort -k1,1) | cut -f2- | sort -k2,2gr | sort -k1,1gr -u > gene_accuracy_distribution.txt
for i in $(seq 100); do cat gene_hypotheses.txt | awk 'BEGIN {FS = "\t"} $3 > '$i | cut -f2 | sort -u | wc -l | awk '{print "'$i'\t" $0}'; done > gene_minscore_to_no_genes.txt

cat gene_hypotheses.txt | awk '{print $2 "\t" sqrt($3 ^ 2)}' | sort -k2,2gr | sort -k1,1 -u | sort -k2,2gr | awk 'BEGIN {FS = "\t"; n = 0; cur = ""} {if(cur != "" && cur != $2){print cur "\t" n} cur = $2; n += 1} END {print cur "\t" n}' > gene_minscore_to_no_genes.txt
cat no_dgidb_drug_hypotheses.txt | awk '{print $2 "\t" sqrt($3 ^ 2)}' | sort -k2,2gr | sort -k1,1 -u | sort -k2,2gr | awk 'BEGIN {FS = "\t"; n = 0; cur = ""} {if(cur != "" && cur != $2){print cur "\t" n} cur = $2; n += 1} END {print cur "\t" n}' > drug_minscore_to_no_genes.txt

totalgenes=$(cat gene_hypotheses.txt | cut -f2 | sort -u | wc -l); for entry in $(cat gene_minscore_to_no_genes.txt | sed 's/\t/,/g'); do minscore=$(echo $entry | cut -d, -f1); recall=$(echo $entry | cut -d, -f2 | awk '{print $1 / '$totalgenes'}'); precision=$(cat raw_reactome_comparison.txt | awk 'BEGIN {FS = "\t"; p = 0; n = 0} sqrt($2 ^ 2) >= '$minscore' {if($2 * $3 > 0){p += 1} else if($2 * $3 < 0){n += 1}} END {print p / (p + n)}'); echo $precision$'\t'$recall; done > gene_precision_recall_raw.txt
cat gene_precision_recall_raw.txt | sort -k2,2gr | awk 'BEGIN {FS = "\t"; pprev = ""; rprev = ""} pprev == "" || ($1 > pprev || $2 > rprev) {print; pprev = $1; rprev = $2}' > gene_precision_recall_curve.txt

totalgenes=$(cat drug_hypotheses.txt | cut -f2 | sort -u | wc -l); for entry in $(cat drug_minscore_to_no_genes.txt | sed 's/\t/,/g'); do minscore=$(echo $entry | cut -d, -f1); recall=$(echo $entry | cut -d, -f2 | awk '{print $1 / '$totalgenes'}'); precision=$(cat raw_dgidb_comparison.txt | awk 'BEGIN {FS = "\t"; p = 0; n = 0} sqrt($2 ^ 2) >= '$minscore' {if($2 * $3 > 0){p += 1} else if($2 * $3 < 0){n += 1}} END {print p / (p + n)}'); echo $precision$'\t'$recall; done > drug_precision_recall_raw.txt
cat drug_precision_recall_raw.txt | sort -k2,2gr | awk 'BEGIN {FS = "\t"; pprev = ""; rprev = ""} pprev == "" || ($1 > pprev || $2 > rprev) {print; pprev = $1; rprev = $2}' > drug_precision_recall_curve.txt

#Get AUC
bash ../../src/auc.sh <(echo $'0\t1'; cat gene_precision_recall_curve.txt; echo $'1\t0')
bash ../../src/auc.sh <(echo $'0\t1'; cat drug_precision_recall_curve.txt; echo $'1\t0')


